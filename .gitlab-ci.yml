---
image: docker:latest
services:
  - docker:dind

variables:
  IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_DRIVER: overlay2
  BRANCH: $CI_COMMIT_REF_NAME
  PIPELINE_ID: ella-$CI_PIPELINE_ID

before_script:
  - apk add --update make


stages:
  - build
  - test
  - review
  - release


build:
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest | cat || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $IMAGE_NAME -t $CI_REGISTRY_IMAGE:latest .
    - docker push $IMAGE_NAME
    - docker push $CI_REGISTRY_IMAGE:latest


test_api:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make test-api
  except:
    - /^ui-.*$/
    - /^ops-.*$/
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-api


test_api_migration:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make test-api-migration
  except:
    - /^ui-.*$/
    - /^ops-.*$/
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-api-migration


test_js:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make test-js
  except:
    - /^ui-.*$/
    - /^ops-.*$/
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-js


test_python:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make test-common
  except:
    - /^ui-.*$/
    - /^ops-.*$/
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-common


test_cli:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make test-cli
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-cli


test_report:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make test-report
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-report


test_e2e:
  stage: test
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
    - rm -rf errorShots
  script:
    - make test-e2e
  after_script:
    - docker rm  -f -v ${PIPELINE_ID}-e2e
  except:
    - /^ui-.*$/
    - /^ops-.*$/
  artifacts:
      paths:
      - errorShots/*.png
      name: ella-e2e-errors-${CI_BUILD_REF_SLUG}
      when: on_failure
      expire_in: 2 weeks


start_review:
  stage: review
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  script:
    - make demo DEMO_NAME=${CI_BUILD_REF_SLUG}.review.ousamg.io
  environment:
    name: review/$CI_BUILD_REF_SLUG
    url: http://$CI_BUILD_REF_SLUG.review.$APPS_DOMAIN
    on_stop: stop_review
  when: manual
  only:
    - branches
  except:
    - master
  tags:
    - web


# when: manual is also run upon branch deletion
# Image name for removal (local/ella-${CI_BUILD_REF_NAME}.review.ousamg.io) is from Makefile
stop_review:
  stage: review
  before_script:
    - apk add --update make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_NAME | cat
  variables:
    GIT_STRATEGY: none
  script:
    - docker rm -f ella-${CI_BUILD_REF_SLUG}.review.ousamg.io; docker rmi -f local/ella-${CI_BUILD_REF_SLUG}.review.ousamg.io;
  when: manual
  environment:
    name: review/$CI_BUILD_REF_SLUG
    action: stop
  only:
    - branches
  except:
    - master
  tags:
    - web


release:
  stage: release
  script:
    - RELEASE_TAG=$CI_COMMIT_REF_NAME make bundle-dist
    - make release-notes
  artifacts:
    paths:
    - ella-release-$CI_COMMIT_REF_NAME-*.tgz
    - ella-releasenotes*.txt
    name: ella-release-$CI_COMMIT_REF_NAME
    when: on_success
    expire_in: 1 mo
  when: on_success
  only:
    - tags
